--For this project, I downloaded Spotify data from Kaggle.
--Then I created a table to insert Spotify data into.
--Finally, I performed analytics on the data using SQL. 


CREATE TABLE BIT_DB.Spotifydata (

id INTEGER PRIMARY KEY,
artist_name VARCHAR NOT NULL,
track_name VARCHAR NOT NULL,
track_id VARCHAR NOT NULL,
popularity INTEGER NOT NULL,
danceability DECIMAL(4,3) NOT NULL,
energy DECIMAL(4,3) NOT NULL,
key INTEGER NOT NULL,
loudness DECIMAL(5,3) NOT NULL,
mode INTEGER NOT NULL,
speechiness DECIMAL(5,4) NOT NULL,
acousticness DECIMAL(6,5) NOT NULL,
instrumentalness TEXT NOT NULL,
liveness DECIMAL(5,4) NOT NULL,
valence DECIMAL(4,3) NOT NULL,
tempo DECIMAL(6,3) NOT NULL,
duration_ms INTEGER NOT NULL,
time_signature INTEGER NOT NULL);


--Then I inserted the Spotify Data .csv into the table.
--Next, I explored the data using the following SQL.

--First I looked to make sure all my columns where inserted correctly
SELECT * FROM BIT_DB.Spotifydata;
    

--Then I determined the avg popularity, danceability, and energy by artist and track. 
SELECT artist_name, track_name, avg(popularity), avg(danceability), avg(energy)
    FROM BIT_DB.spotifydata
    GROUP BY artist_name, track_name;

--Then I determined who the Top 10 artists are by popularity
SELECT track_name, artist_name, popularity
    FROM BIT_DB.spotifydata
    ORDER BY popularity DESC
    LIMIT 10;

--Lastly I looked at which songs by my favorite artist were most popular
SELECT artist_name, track_name 
    FROM BIT_DB.Spotifydata 
    WHERE artist_name LIKE '%bad bunny%'
    ORDER BY popularity
